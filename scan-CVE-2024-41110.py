import subprocess

def parse_version(version_str):
    return tuple(map(int, version_str.split('.')))

def is_vulnerable(version_str):
    version = parse_version(version_str)
    vulnerable_versions = [
        (19, 3, 15), (20, 10, 27), (23, 0, 14), (24, 0, 9),
        (25, 0, 5), (26, 0, 2), (26, 1, 4), (27, 0, 3), (27, 1, 0)
    ]
    return any(version <= v for v in vulnerable_versions)


def execute_command(command):
    try:
        result = subprocess.run(command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        return {
            "stdout": result.stdout,
            "stderr": result.stderr,
            "returncode": result.returncode
        }
    except subprocess.CalledProcessError as e:
        return {
            "stdout": e.stdout,
            "stderr": e.stderr,
            "returncode": e.returncode,
            "error": str(e)
        }

## Checagem de versão do docker
resultDockerVersion = execute_command("docker version --format '{{.Server.Version}}'")
print("Docker version: " + resultDockerVersion["stdout"])

## Checagem de versão do plugin AuthZ
commands = [
    "grep -q 'authorization-plugins' /etc/docker/daemon.json && echo 'Found in daemon.json' || echo 'Not found in daemon.json'",
    "grep -q 'authorization-plugins' /lib/systemd/system/docker.service && echo 'Found in docker.service' || echo 'Not found in docker.service'",
    "ps aux | grep [d]ockerd | grep -q 'authorization-plugin' && echo 'Found in running processes' || echo 'Not found in running processes'"
]

authz_used = False
for cmd in commands:
    resultPlugin = execute_command(cmd)
    if 'Found' in resultPlugin:
        authz_used = True

docker_vulnerable = is_vulnerable(resultDockerVersion["stdout"])

if authz_used and docker_vulnerable:
    print("[WARN] VULNERÁVEL. Este host é particularmente vulnerável devido ao uso do plugin AuthZ e uma versão afetada do Docker.\n")
elif docker_vulnerable:
    print("[INFO] NÃO VULNERÁVEL. Este host possui uma versão afetada do Docker porém não utiliza o plugin AuthZ.\n")
else:
    print("[INFO] NÃO VULNERÁVEL.\n")
